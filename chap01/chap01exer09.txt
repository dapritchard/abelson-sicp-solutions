*Exercise 1.9:* Each of the following two procedures defines a
method for adding two positive integers in terms of the procedures
`inc', which increments its argument by 1, and `dec', which
decrements its argument by 1.

     (define (+ a b)
       (if (= a 0)
           b
           (inc (+ (dec a) b))))

     (define (+ a b)
       (if (= a 0)
           b
           (+ (dec a) (inc b))))

Using the substitution model, illustrate the process generated by
each procedure in evaluating `(+ 4 5)'.  Are these processes
iterative or recursive?

------------------------------------------------------------------


version 1 full:
---------------

this answer explicitly lists all of the steps.  See the following answer for a
more concise presentation, as well as a discussion of algorithm complexity.


(+ 4 5)

(if (= 4 0)
    5
    (inc (+ (dec 4) 5)))

(inc (+ (dec 4) 5))

(inc (+ 3 5))

(inc (if (= 3 0)
         5
         (inc (+ (dec 3) 5))))

(inc (if (= 3 0)
         5
         (inc (+ (dec 3) 5))))

(inc (inc (+ (dec 3) 5)))

(inc (inc (+ 2 5)))

(inc (inc (if (= 2 0)
              5
              (inc (+ (dec 2) 5)))))

(inc (inc (inc (+ (dec 2) 5))))

(inc (inc (inc (+ 1 5))))

(inc (inc (inc (if (= 1 0)
                   5
                   (inc (+ (dec 1) 5))))))

(inc (inc (inc (inc (+ (dec 1) 5)))))

(inc (inc (inc (inc (+ 0 5)))))

(inc (inc (inc (inc (if (= 0 0)
                        5
                        (inc (+ (dec 0) 5)))))))

(inc (inc (inc (inc 5))))

(inc (inc (inc 6)))

(inc (inc 7))

(inc 8)

9




version 1 abbreviated:
----------------------

this presentation condenses some of the steps to as to make the result clearer
in terms of a performance perspective.  This algorithm is a linear recursive
process since the depth of the recursion grows linearly as a function of its
first argument.

(+ 4 5)
(inc (+ 3 5))
(inc (inc (+ 2 5)))
(inc (inc (inc (+ 1 5))))
(inc (inc (inc (inc (+ 0 5)))))
(inc (inc (inc (inc 5))))
(inc (inc (inc 6)))
(inc (inc 7))
(inc 8)
9




version 2 full:
---------------

this answer explicitly lists all of the steps.  See the following answer for a
more concise presentation, as well as a discussion of algorithm complexity.


(+ 4 5)

(if (= 4 0)
    5
    (+ (dec 4) (inc 5)))

(+ (dec 4) (inc 5))


(+ 3 6)

(if (= 3 0)
    6
    (+ (dec 3) (inc 5)))

(+ 2 7)

(if (= 2 0)
    7
    (+ (dec 2) (inc 7)))

(+ 1 8)


(if (= 1 0)
    8
    (+ (dec 1) (inc 8)))

(+ 0 9)

(if (= 0 0)
    9
    (+ (dec 3) (inc 5)))

9




version 2 abbreviated:
----------------------

this presentation condenses some of the steps to as to make the result clearer
in terms of a performance perspective.  This algorithm is an iterative process
since the depth of the recursion stays constant.


(+ 4 5)
(+ 3 6)
(+ 2 7)
(+ 1 8)
(+ 0 9)
9
